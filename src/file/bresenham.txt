
Bresenham's Circle Drawing Algorithm
esenham's circle algorithm avoids these square root calculations by comparing the
squares of the pixel separation distances. It is possible to perform a direct distance
comparison without a squaring operation.
In this approach is to test the halfway position between two pixels to determine if
midpoint is inside or outside the circle boundary. At center (0, 0) the second-
polynomial equation of a circle can be written as : x2 + y2 = , where x = the x
coordinate, y = the coordinate and r = the circle radius.
farde(x, y) = x2 + y2-2

this
order

<0 if (x, y) is inside the circle boundary
fcrde (x, y) =0 if(x, y) is on the circle houndary
>0 if (x, y) is outside the circle boundary

If a circle is to be plotted efficiently, the use of trigonometric, the use of
lgonometric and power functions must be avoided. And, as with the generation of a
strigh line, it is also desirable to perform the calculations necessary to find the scan-
converted points with only integer addition, subtraction, and multiplication by powers of
2 Bresenham's circle algorithm allows these goals to be met. Scan-converting circle using
Bresenham's algorithm works as follows. If the eight-way symmetry of a circle is used to
generate a circle, points will only have to be generated through a 45° angle. And, if points
are generated from 90°to.45°moves will be made only in the + x and-y directions.

We best approximation of the true circle will be described by those pixels in the
raster that fall the least distance from the true circle. From figure notice that, if points
are generated from 90°and 45°each new point closest to the true circle can be found
by taking either of two actions.
1. move in the x direction one unit or
2. move in the x direction one unit and move in the negative y direction one unit.



.(iii)

Page # 324

... (ii)

di-d ;= 2(Xi+1+1)2+y2+1+(yi+1-1)2-y21(y/-1)2
Since Xi+1 = Xj + 1
di+1-d ;= 2(x;+1+1)2+y2141+(y/+1-1)2-2(x;+1)2-y21-(y-1)2

di+1=2(Xi+1+1)2+y2i+1+(yi+1-1)2-2r2.


Therefore, method of selecting between these two choices is all that is necessary to
find the points closest to the true circle.
Assume that (x1, yi) are the coordinates of the scan-converted pixel upon entering
step (i) Let the distance from the origin to pixel T squared minus the distance to the
true circle quared = d(T). Then let the distance from the origin to pixel S squared
minus the distance to the true circle squared = d(S). As the coordinated of T are (x1 +
1, y1) and those of S are (x1 +1, y1-1), the following expressions can be developed :
d(T)=(x1+1)2+y12-r2 [always+ ve]
d(S)=(x1+1)2+(y1-1)2- r2 [always-ve]
This function d provides a relative measurement of the distance from the center of a

circle) and d(S) will always be negative (S is inside the true circle), a decision
variable di may be defined as follows :

d1=d(T) + d(S)
d1=2(x1+1)2+y21+(y1-2r2 .......... (i)
When d1<0, we have |d)T)|<|d)S)| and pixel T is chosen.
When d1 ≤ 0, we have |d(T)| ≥ |d(S)| and pixel S is chosen.

We can also write the decision variable d1+1 for the next step

now subtracting (ii) - (i)

pixel to the true circle. Since d(T) will always be positive (T is outside the true

di+1-dj=2(x+1+1)2+y2w41+(yi+1-1)2-2(x;+1)2-y2,-(y-1)2

di+1+d ;= 2{x; +1)2+4(x;+1)+2+y2i+1+y2i+1+1-2(x;+1)2-y2-y2+ 2y,-1
di+1-d; =4(x; +1) + 2 + 2y2i+1- 2yi+1-2y2; + 2yi
di+1-di= 4x; +4+2+ 2(y2+1-y21) - 2(yi+1-yi)
dw1=d; +4x; +2(y'i+1-Y2i)-2(yi+1-y) +6 ....


Page # 325

equation

Po= 3- 2r =- 17

Yi+1 =yi- 1

Yi+1 =Yi

Pi+1 =Pi + 4x; + 6

if p< 0 then

Yo = r

let a circle has radius r = 10 then
Initial point (Xo, Yo) =(0, 10)

esle if p; ≥ 0 then
Pi+1= Pi + 4(xi- y;0 + 10

Po=3-2r
while (x; ≤ yı)

Xo= 0

do = 2 + r2+ r2- 2r + 1-2r2

d=2(x, +1)2+ y21 + (yı-1)2-2r2
do= 2(0+1)2+ r2+ (r -1)2- 2r2

dn1= d, + 4x, + 0- 0 + 6

daaj = d, +4x, +0-0 + 6
diat = d + 4x, + 2(v'-v2i) - 2(y1-vi) +6

di1 = d; = 4x, + 6

Xi+1= Xi + 1
. Draw Symmetric points (xcenter, ycenter,xi, Yi-

Example:

IfT is the chosen pixel (meaning that di< 0) then yiet = yi, now from (iil)

d,+1 = d, + 4(x ;- yı) + 10

For initial parameter do, we need to set (0, r), i.e. (x = 0, y = r) in the following

do=3-2r.

Algorithm :CircleBresnham (xcenter, ycenter, radius r)

Computer Graphics

di.1=d, +4x,-4y, + 2 +8
diai = d, + 4x + 2(y'1-2y, +1-y'} + 2 + 6
di = d, + 4x + 2((y-1)2-v21)) - (y-1-yl) + 6
2. If S is the chosen pixel (meaning that d; ≥ 0) then yit = yi, now from (ili)



I
0
1
2

3
4

5
6
7

Pi
-17
-11
-1

13
-5

15
9

The following table is generated by the Bresenham circie drawing o9

Xi, yi
(0, 10)
(1, 10)
(2, 10)
(3, 10)
(4, 9)
(5, 9)
(6, 8)
(7, 7)